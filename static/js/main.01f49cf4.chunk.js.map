{"version":3,"sources":["initial-data.js","components/TrelloCard.jsx","components/NewCard.jsx","components/TrelloList.jsx","components/TrelloBoard.jsx","App.jsx","index.jsx"],"names":["initialData","cards","card-1","id","content","card-2","card-3","card-4","lists","list-1","title","cardOrder","list-2","list-3","listOrder","TrelloCard","_ref","card","index","react_default","a","createElement","react_beautiful_dnd_esm","draggableId","provided","snapshot","Object","assign","draggableProps","dragHandleProps","ref","innerRef","className","isDragging","NewCard","state","cardContent","textareaRef","React","createRef","handleChange","e","_this","setState","target","value","handleBtnClick","type","cb","isDisplay","this","props","current","focus","_this2","_this$props","addCardDone","onChange","placeholder","onClick","Component","TrelloList","isNewCardDisplay","handleAddCard","data","list","addCard","listId","renderCards","map","components_TrelloCard","key","_this$props2","droppableId","innerProvided","droppableProps","NewCard_NewCard","TrelloBoard","_this$state","newCard","concat","uuidv1","newCards","objectSpread","defineProperty","newCardOrder","Array","from","push","newList","newState","handleAddList","_this$state2","listTitle","window","prompt","newListOrder","onDragEnd","result","source","destination","_this$state3","startList","endList","splice","_objectSpread6","newStartCardOrder","newEndCardOrder","newStartList","newEndList","_this$state4","direction","cardsArr","cardId","TrelloList_TrelloList","App","TrelloBoard_TrelloBoard","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.01f49cf4.chunk.js","sourcesContent":["const initialData = {\n  cards: {\n    'card-1': { id: 'card-1', content: 'Take out the garbage' },\n    'card-2': { id: 'card-2', content: 'Watch my favorite show' },\n    'card-3': { id: 'card-3', content: 'Charge my phone' },\n    'card-4': { id: 'card-4', content: 'Cook dinner' },\n  },\n  lists: {\n    'list-1': {\n      id: 'list-1',\n      title: 'To do',\n      cardOrder: ['card-1', 'card-2', 'card-3'],\n    },\n    'list-2': {\n      id: 'list-2',\n      title: 'In progresss',\n      cardOrder: ['card-4'],\n    },\n    'list-3': {\n      id: 'list-3',\n      title: 'Done',\n      cardOrder: [],\n    },\n  },\n  listOrder: ['list-1', 'list-2', 'list-3'],\n};\n\nexport default initialData;\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst TrelloCard = ({ card, index }) => (\n  <Draggable draggableId={card.id} index={index}>\n    {(provided, snapshot) => (\n        <li\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          className={\n            snapshot.isDragging ? 'trello-card is-dragging' : 'trello-card'\n          }>\n          {card.content}\n        </li>\n    )}\n  </Draggable>\n);\n\nexport default TrelloCard;\n","import React, { Component } from 'react';\n\nexport default class NewCard extends Component {\n  state = {\n    cardContent: '',\n  };\n\n  textareaRef = React.createRef();\n\n  componentDidUpdate() {\n    // Focus the text area when the display becomes visible\n    const { isDisplay } = this.props;\n    const { cardContent } = this.state;\n    if (isDisplay && !cardContent) {\n      this.textareaRef.current.focus();\n    }\n  }\n\n  handleChange = (e) => {\n    // TODO: detect Enter key pressed and fireup submit\n\n    this.setState({ cardContent: e.target.value });\n  };\n\n  handleBtnClick = (type, cb) => {\n    const { cardContent } = this.state;\n    cb({ type, cardContent });\n    this.setState({ cardContent: '' });\n  };\n\n  render() {\n    const { cardContent } = this.state;\n    const { isDisplay, addCardDone } = this.props;\n    return (\n      <div\n        className={\n          isDisplay ? 'new-card__container is-display' : 'new-card__container'\n        }>\n        <div className=\"trello-card new-card__textarea-container\">\n          <textarea\n            className=\"new-card__textarea\"\n            ref={this.textareaRef}\n            value={cardContent}\n            onChange={this.handleChange}\n            placeholder=\"Enter a title for this card...\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"new-card__btn\"\n          onClick={() => this.handleBtnClick('add', addCardDone)}>\n          Add Card\n        </button>\n        <button\n          type=\"button\"\n          className=\"new-card__cancel-btn\"\n          onClick={() => this.handleBtnClick('cancel', addCardDone)}>\n          X\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport TrelloCard from './TrelloCard';\nimport NewCard from './NewCard';\n\nexport default class TrelloList extends React.Component {\n  state = {\n    isNewCardDisplay: false,\n  };\n\n  handleAddCard = (data) => {\n    const { list, addCard } = this.props;\n\n    if (data.type === 'add') {\n      addCard({ listId: list.id, cardContent: data.cardContent });\n    }\n    this.setState({ isNewCardDisplay: false });\n  };\n\n  renderCards = cards => cards.map((card, index) => (\n      <TrelloCard key={card.id} card={card} index={index} />\n  ));\n\n  render() {\n    const { list, cards, index } = this.props;\n\n    const { isNewCardDisplay } = this.state;\n    return (\n      <Draggable draggableId={list.id} index={index}>\n        {provided => (\n          <section\n            className=\"trello-list__container\"\n            {...provided.draggableProps}\n            ref={provided.innerRef}>\n            <div className=\"trello-list\">\n              <h2 className=\"trello-list__title\" {...provided.dragHandleProps}>\n                {list.title}\n              </h2>\n              <Droppable droppableId={list.id} type=\"CARD\">\n                {innerProvided => (\n                  <ul\n                    {...innerProvided.droppableProps}\n                    ref={innerProvided.innerRef}\n                    className=\"trello-card__container\">\n                    {this.renderCards(cards)}\n                    {innerProvided.placeholder}\n                    <NewCard\n                      isDisplay={isNewCardDisplay}\n                      addCardDone={this.handleAddCard}\n                    />\n                  </ul>\n                )}\n              </Droppable>\n              <div\n                className={\n                  !isNewCardDisplay\n                    ? 'trello-list__button is-display'\n                    : 'trello-list__button'\n                }\n                type=\"button\"\n                onClick={() => {\n                  this.setState({ isNewCardDisplay: true });\n                }}>\n                <h3 className=\"button__text\">+ Add a card</h3>\n              </div>\n            </div>\n          </section>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './TrelloBoard.scss';\nimport uuidv1 from 'uuid/v1';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport initialData from '../initial-data';\nimport TrelloList from './TrelloList';\n\nexport default class TrelloBoard extends Component {\n  state = initialData;\n\n  handleAddCard = (data) => {\n    const { cards, lists } = this.state;\n    const { listId, cardContent } = data;\n    const newCard = {\n      id: `card-${uuidv1()}`,\n      content: cardContent,\n    };\n\n    const newCards = {\n      ...cards,\n      [newCard.id]: newCard,\n    };\n    const newCardOrder = Array.from(lists[listId].cardOrder);\n    newCardOrder.push(newCard.id);\n    const newList = {\n      ...lists[listId],\n      cardOrder: newCardOrder,\n    };\n\n    const newState = {\n      ...this.state,\n      cards: newCards,\n      lists: {\n        ...lists,\n        [listId]: newList,\n      },\n    };\n\n    this.setState(newState);\n  };\n\n  handleAddList = () => {\n    const { lists, listOrder } = this.state;\n    // eslint-disable-next-line no-alert\n    const listTitle = window.prompt('Please enter the title of new list');\n    if (!listTitle) {\n      return;\n    }\n    const newList = {\n      id: `list-${uuidv1()}`,\n      title: listTitle,\n      cardOrder: [],\n    };\n    const newListOrder = Array.from(listOrder);\n    newListOrder.push(newList.id);\n    const newState = {\n      ...this.state,\n      lists: {\n        ...lists,\n        [newList.id]: newList,\n      },\n      listOrder: newListOrder,\n    };\n    this.setState(newState);\n  };\n\n  onDragEnd = (result) => {\n    const {\n      draggableId, source, destination, type,\n    } = result;\n    const { lists, listOrder } = this.state;\n\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId\n      && destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'LIST') {\n      const newListOrder = Array.from(listOrder);\n      newListOrder.splice(source.index, 1);\n      newListOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...this.state,\n        listOrder: newListOrder,\n      };\n\n      this.setState(newState);\n      return;\n    }\n\n    const startList = lists[source.droppableId];\n    const endList = lists[destination.droppableId];\n\n    if (startList.id === endList.id) {\n      // dragNdrop in same lsit\n      const newCardOrder = Array.from(startList.cardOrder);\n      newCardOrder.splice(source.index, 1);\n      newCardOrder.splice(destination.index, 0, draggableId);\n\n      const newList = {\n        ...startList,\n        cardOrder: newCardOrder,\n      };\n      const newState = {\n        ...this.state,\n        lists: {\n          ...lists,\n          [newList.id]: newList,\n        },\n      };\n\n      this.setState(newState);\n    } else {\n      const newStartCardOrder = Array.from(startList.cardOrder);\n      const newEndCardOrder = Array.from(endList.cardOrder);\n      newStartCardOrder.splice(source.index, 1);\n      newEndCardOrder.splice(destination.index, 0, draggableId);\n\n      const newStartList = {\n        ...startList,\n        cardOrder: newStartCardOrder,\n      };\n\n      const newEndList = {\n        ...endList,\n        cardOrder: newEndCardOrder,\n      };\n\n      const newState = {\n        ...this.state,\n        lists: {\n          ...lists,\n          [newStartList.id]: newStartList,\n          [newEndList.id]: newEndList,\n        },\n      };\n\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const { cards, lists, listOrder } = this.state;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"LIST\">\n          {provided => (\n            <main\n              className=\"trello-board\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}>\n              {listOrder.map((listId, index) => {\n                const list = lists[listId];\n                const cardsArr = list.cardOrder.map(cardId => cards[cardId]);\n                return (\n                  <TrelloList\n                    key={list.id}\n                    list={list}\n                    cards={cardsArr}\n                    index={index}\n                    addCard={this.handleAddCard}\n                  />\n                );\n              })}\n              {provided.placeholder}\n              <section className=\"trello-list__container trello-list__add-new\">\n                <div className=\"trello-list\" onClick={this.handleAddList}>\n                  <h2 className=\"trello-list__title\">+ Add another list</h2>\n                </div>\n              </section>\n            </main>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport TrelloBoard from './components/TrelloBoard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>App Bar</nav>\n      <header>Board Title</header>\n      <TrelloBoard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}