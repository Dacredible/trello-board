{"version":3,"sources":["initial-data.js","components/TrelloCard.jsx","components/TrelloList.jsx","components/TrelloBoard.jsx","App.jsx","index.jsx"],"names":["initialData","cards","card-1","id","content","card-2","card-3","card-4","lists","list-1","title","cardOrder","list-2","list-3","listOrder","TrelloCard","_ref","card","index","react_default","a","createElement","react_beautiful_dnd_esm","draggableId","provided","snapshot","Object","assign","draggableProps","dragHandleProps","ref","innerRef","className","isDragging","TrelloList","props","list","addCard","droppableId","type","innerProvided","droppableProps","map","components_TrelloCard","key","renderCards","placeholder","onClick","cb","cardContent","window","prompt","listId","handleAddCard","TrelloBoard","state","data","_this$state","_this","newCard","concat","uuidv1","newCards","objectSpread","defineProperty","newCardOrder","Array","from","push","newList","newState","setState","handleAddList","_this$state2","listTitle","newListOrder","onDragEnd","result","source","destination","_this$state3","startList","endList","splice","_objectSpread6","newStartCardOrder","newEndCardOrder","newStartList","newEndList","_this2","this","_this$state4","direction","cardsArr","cardId","components_TrelloList","Component","App","TrelloBoard_TrelloBoard","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ce8f170a.chunk.js","sourcesContent":["const initialData = {\n  cards: {\n    'card-1': { id: 'card-1', content: 'Take out the garbage' },\n    'card-2': { id: 'card-2', content: 'Watch my favorite show' },\n    'card-3': { id: 'card-3', content: 'Charge my phone' },\n    'card-4': { id: 'card-4', content: 'Cook dinner' },\n  },\n  lists: {\n    'list-1': {\n      id: 'list-1',\n      title: 'To do',\n      cardOrder: ['card-1', 'card-2', 'card-3'],\n    },\n    'list-2': {\n      id: 'list-2',\n      title: 'In progresss',\n      cardOrder: ['card-4'],\n    },\n    'list-3': {\n      id: 'list-3',\n      title: 'Done',\n      cardOrder: [],\n    },\n  },\n  listOrder: ['list-1', 'list-2', 'list-3'],\n};\n\nexport default initialData;\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst TrelloCard = ({ card, index }) => (\n  <Draggable draggableId={card.id} index={index}>\n    {(provided, snapshot) => (\n        <li\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          className={\n            snapshot.isDragging ? 'trello-card is-dragging' : 'trello-card'\n          }>\n          {card.content}\n        </li>\n    )}\n  </Draggable>\n);\n\nexport default TrelloCard;\n","import React from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport TrelloCard from './TrelloCard';\n\nconst handleAddCard = (list, cb) => {\n  // eslint-disable-next-line no-alert\n  const cardContent = window.prompt('Please enter the content of new card');\n  if (!cardContent) {\n    return;\n  }\n  cb({ listId: list.id, cardContent });\n};\n\nconst renderCards = cards => cards.map((card, index) => (\n    <TrelloCard key={card.id} card={card} index={index} />\n));\n\nconst TrelloList = (props) => {\n  const {\n    list, cards, addCard, index,\n  } = props;\n\n  return (\n    <Draggable draggableId={list.id} index={index}>\n      {provided => (\n        <section\n          className=\"trello-list__container\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}>\n          <div className=\"trello-list\">\n            <h2 className=\"trello-list__title\" {...provided.dragHandleProps}>\n              {list.title}\n            </h2>\n            <Droppable droppableId={list.id} type=\"CARD\">\n              {innerProvided => (\n                <ul\n                  {...innerProvided.droppableProps}\n                  ref={innerProvided.innerRef}\n                  className=\"trello-card__container\">\n                  {renderCards(cards)}\n                  {innerProvided.placeholder}\n                </ul>\n              )}\n            </Droppable>\n            <div\n              className=\"trello-list__button\"\n              type=\"button\"\n              onClick={() => {\n                handleAddCard(list, addCard);\n              }}>\n              <h3 className=\"button__text\">+ Add a card</h3>\n            </div>\n          </div>\n        </section>\n      )}\n    </Draggable>\n  );\n};\n\nexport default TrelloList;\n","import React, { Component } from 'react';\nimport './TrelloBoard.scss';\nimport uuidv1 from 'uuid/v1';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport initialData from '../initial-data';\nimport TrelloList from './TrelloList';\n\nexport default class TrelloBoard extends Component {\n  state = initialData;\n\n  handleAddCard = (data) => {\n    const { cards, lists } = this.state;\n    const { listId, cardContent } = data;\n    const newCard = {\n      id: `card-${uuidv1()}`,\n      content: cardContent,\n    };\n\n    const newCards = {\n      ...cards,\n      [newCard.id]: newCard,\n    };\n    const newCardOrder = Array.from(lists[listId].cardOrder);\n    newCardOrder.push(newCard.id);\n    const newList = {\n      ...lists[listId],\n      cardOrder: newCardOrder,\n    };\n\n    const newState = {\n      ...this.state,\n      cards: newCards,\n      lists: {\n        ...lists,\n        [listId]: newList,\n      },\n    };\n\n    this.setState(newState);\n  };\n\n  handleAddList = () => {\n    const { lists, listOrder } = this.state;\n    // eslint-disable-next-line no-alert\n    const listTitle = window.prompt('Please enter the title of new list');\n    if (!listTitle) {\n      return;\n    }\n    const newList = {\n      id: `list-${uuidv1()}`,\n      title: listTitle,\n      cardOrder: [],\n    };\n    const newListOrder = Array.from(listOrder);\n    newListOrder.push(newList.id);\n    const newState = {\n      ...this.state,\n      lists: {\n        ...lists,\n        [newList.id]: newList,\n      },\n      listOrder: newListOrder,\n    };\n    this.setState(newState);\n  };\n\n  onDragEnd = (result) => {\n    const {\n      draggableId, source, destination, type,\n    } = result;\n    const { lists, listOrder } = this.state;\n\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId\n      && destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'LIST') {\n      const newListOrder = Array.from(listOrder);\n      newListOrder.splice(source.index, 1);\n      newListOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...this.state,\n        listOrder: newListOrder,\n      };\n\n      this.setState(newState);\n      return;\n    }\n\n    const startList = lists[source.droppableId];\n    const endList = lists[destination.droppableId];\n\n    if (startList.id === endList.id) {\n      // dragNdrop in same lsit\n      const newCardOrder = Array.from(startList.cardOrder);\n      newCardOrder.splice(source.index, 1);\n      newCardOrder.splice(destination.index, 0, draggableId);\n\n      const newList = {\n        ...startList,\n        cardOrder: newCardOrder,\n      };\n      const newState = {\n        ...this.state,\n        lists: {\n          ...lists,\n          [newList.id]: newList,\n        },\n      };\n\n      this.setState(newState);\n    } else {\n      const newStartCardOrder = Array.from(startList.cardOrder);\n      const newEndCardOrder = Array.from(endList.cardOrder);\n      newStartCardOrder.splice(source.index, 1);\n      newEndCardOrder.splice(destination.index, 0, draggableId);\n\n      const newStartList = {\n        ...startList,\n        cardOrder: newStartCardOrder,\n      };\n\n      const newEndList = {\n        ...endList,\n        cardOrder: newEndCardOrder,\n      };\n\n      const newState = {\n        ...this.state,\n        lists: {\n          ...lists,\n          [newStartList.id]: newStartList,\n          [newEndList.id]: newEndList,\n        },\n      };\n\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const { cards, lists, listOrder } = this.state;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"LIST\">\n          {provided => (\n            <main\n              className=\"trello-board\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}>\n              {listOrder.map((listId, index) => {\n                const list = lists[listId];\n                const cardsArr = list.cardOrder.map(cardId => cards[cardId]);\n                return (\n                  <TrelloList\n                    key={list.id}\n                    list={list}\n                    cards={cardsArr}\n                    index={index}\n                    addCard={this.handleAddCard}\n                  />\n                );\n              })}\n              {provided.placeholder}\n              <section className=\"trello-list__container trello-list__add-new\">\n                <div className=\"trello-list\" onClick={this.handleAddList}>\n                  <h2 className=\"trello-list__title\">+ Add another list</h2>\n                </div>\n              </section>\n            </main>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport TrelloBoard from './components/TrelloBoard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>App Bar</nav>\n      <header>Board Title</header>\n      <TrelloBoard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}